/* 
-Primary Color for the website: #e67e22;
Tints generated from the site: (https://maketintsandshades.com/) to make it look cool.
-Tints: #fae5d3
 */



/* Setting up the global properties in order to remove the pre-occupied margins and paddings. */
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
/* Setting the root element value such that where ever the rem is used this value will be the multiple of the rem used: 2 rem */
html{
    font-size: 62.5%;
}
/* Below are the properties defined at the body tag, which will then be inherited by the child tags and can be assumed as global properties.*/
body{
    font-family: "Rubik", sans-serif;
    line-height: 1;
    color: #555;
    font-weight: 400;
}
/**********************************/
/* General Components and reusable components */
/* Designin the h1 element */
.heading-primary,
.heading-secondarym
.heading-tertiary{
    /* Grouping the similary properties to prevent writing it multiple times. */
    font-weight: 700;
    /* More natural dark color */
    color: #333;
    color: #45260a;
    letter-spacing: -0.9px;
}
.heading-primary{
    /* 5.2 rem == 52px */
    font-size: 5.2rem;
    line-height: 1.05;
    margin-bottom: 3.2rem;
}
.heading-secondary{
    font-size: 4.4rem;
    line-height: 1.2;
    margin-bottom: 9.6rem;
}
.heading-tertiary{
    font-size: 3rem;
    line-height: 1.2;
    margin-bottom: 3.2rem;
}
.subheading{
    display: block;
    font-weight: 500;
    font-size: 1.6rem;
    color: #cf711f;
    text-transform: uppercase;
    margin-bottom: 1.6rem;
    letter-spacing: 0.75px;
}

/* Designing the buttons. The below properties are for both the buttons.*/
.btn:link,
.btn:visited{
    background-color: #e67e22;
    text-decoration: none;
    color: #fff;
    display: inline-block;
    padding: 1.6rem 3.2rem;
    font-size: 1.6rem;
    font-weight: 600;
    border-radius: 10px;
    transition: all 0.4s ease-in-out;
}
/* Designing the buttons individually. */
.btn--full:link,
.btn--full:visited{
    background-color: #e67e22;
    color: #fff;
}

.btn--full:hover,
.btn--full:active{
    background-color: #cf711f;
    color: #fff;
}

.btn--outline:link,
.btn--outline:visited{
    background-color: #fff;
    color: #555;
}

.btn--outline:hover,
.btn--outline:active{
    background-color: #fae5d3;
    /* Using a box shadow property here such that if we use border short hand property then anyhow it will be applied but it will bulge outside of the button make it like it is moved up side on hover, to avoid and add the shadow towards inside we use the property as inset, keeping all the values to 0 and using the optional value here.*/
    box-shadow: inset 0 0 0 3px #fff;
}
/* Creating a helper class to add some margin to one of the buttons and it can be reused again in the markup needed.*/
.margin-right-sm{
    margin-right: 1.6rem !important;
}
/* Bootstrap Classes which are reusable. */
/* This will be the main container of the section holding a max-width size and above to it, there will be a section again.*/
.container{
    /* This is the most commonly used size for the section in almost every webpages. */
    max-width: 120rem;
    padding: 0 3.2rem;
    margin: 0 auto;
}
.grid{
    display: grid;
    column-gap: 6.4rem;
    row-gap: 9.6rem;
}

.grid--center-v{
    align-items: center;
}

.grid--2-cols{
    grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols{
    grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols{
    grid-template-columns: repeat(4, 1fr);
}

/**********************************/
/* Hero Section begins here */
.hero-section{
    /* Adding the background color to this section to cover the whole width and not only to the width of the hero-text-box div. */
    background-color: #fae5d3;
    /* Padding on left and right is not necessary here.*/
    padding: 4.8rem 0 9.6rem;
}
/* This is the hero div which is the container for the items to make the css grid. */
.hero{
    /* The max-width property will take up the 130rem only if there is more space than expected and when the window is resized and the size of the window itself is decreasing then this will take up the whole 100% value. */
    max-width: 130rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    margin: 0 auto;
    /* adding a padding of below value will always maintain a padding even though the browser window gets smaller.*/
    padding: 0 3.2rem;
    align-items: center;
    gap: 9.6rem;
}
.hero-img{
    width: 100%;
}

/* Designing the hero description paragraph */
.hero-description{
    font-size: 2rem;
    line-height: 1.6;
    margin-bottom: 4.8rem;
}

/* Making the images and para to be side by side */
.delivered-meals{
    display: flex;
    align-items: center;
    margin-top: 8rem;
    gap: 1.6rem;
}
.delivered-imgs{
    display: flex;
}
.delivered-imgs img{
    height: 4.8rem;
    width: 4.8rem;
    /* Using the margin-right values in the negative to overlap the images but anyhow this would not work as expected with the display flex and giving it a negative value. */
    margin-right: -1.6rem;
    border-radius: 50%; 
    border: 3px solid #fae5d3; 
}
.delivered-imgs img:last-child{
    margin: 0;
}
.delivered-text{
    font-size: 1.8rem;
    font-weight: 600;
}
.delivered-text span{
    color: #cf711f;
    font-weight: 700;
}
/* Hero section ends here */
/**********************************/
/* Header section begins here */
.header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #fae5d3;
    /* We are making the height as a fixed value because later to use this as sticky which will work better with the fixed values, Instead we would have given a padding but that would not work as expected with the sticky position. */
    height: 9.6rem;
    padding: 0 4.8rem;
}
.logo{
    height: 2.2rem;
}
/* Header section ends here */
/**********************************/
/* Navigation Section begins here */
.main-nav-list{
    list-style: none;
    display: flex;
    align-items: center;
    gap: 3.2rem;
}
.main-nav-link:link,
.main-nav-link:visited{
    display: inline-block;
    text-decoration: none;
    color: #333;
    font-weight: 500;
    font-size: 1.8rem;
    transition: all 0.3s ease-in-out;
}

.main-nav-link:hover,
.main-nav-link:active{
    color: #cf711f;
}
/* '.main-nav-list.nav-cta' targets elements that have both classes main-nav-list and nav-cta.*/
.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited{
    padding: 1.2rem 2.4rem;
    border-radius: 10px;
    background-color: #e67e22;
    color: #fff;
}
.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active{
    background-color: #cf711f;
}
/* Navigation section ends here. */
/**********************************/
/* Section How begins here */
.section-how{
    padding: 9.6rem 0;
}
.step-img{
    width: 35%;
}
.step-number{
    font-size: 8.6rem;
    font-weight: 600;
    color: #ddd;
    margin-bottom: 1.2rem;
}
.step-description{
    font-size: 1.8rem;
    line-height: 1.8;
}
.step-img-box{
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}
.step-img-box::before,
.step-img-box::after{
    /* Using this pseudo class to form a square with respect to the step-img-box and giving it a proper width and since height will not work with percentages here, we are using padding-bottom property.
    NOTE: Using the after pseudo property doesn't make any change here*/
    content: '';
    display: block;
    /* height: 60%; This will not work here as percentage value.*/
    /* Instead we use a trick as padding-bottom along with the % */
    /* padding-bottom: 60%; */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
}
.step-img-box::before{
    background-color: #fae5d3;
    width: 60%;
    padding-bottom: 60%;
    z-index: -2;
}
.step-img-box::after{
    background-color: #fdf2e9;
    width: 45%;
    padding-bottom: 45%;
    z-index: -2;
}